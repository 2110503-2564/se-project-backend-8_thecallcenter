@startuml
' left to right direction
package "HotelBooking"{
    class "<<Client>>\nUser" as Client{}
    class "<<Application>>\nHotelService" as HotelService{}
    
    class "<<Middleware>>\nSecurityMiddleware" as SecurityMiddleware{
        +sanitizeInput(): void
        +applyRateLimit(): void
        +enableCORS(): void
        +parseCookies(): void
        +preventHttpParamPollution(): void
    }

    class "<<Middleware>>\nAuthMiddleware" as AuthMiddleware{
        +verifyToken(): void
        +authorizeUserRole(): void
    }

    class "<<Middleware>>\nValidationMiddleware" as ValidationMiddleware{
        +validateHotelData(): void
        +validateBookingData(): void
    }
    
    class "<<Resource>>\nHotels" as ResourceHotels{
        <<GET>> +getHotels(): Hotel
        <<POST>> +createHotel(): Hotel
        <<PUT>> +updateHotel(): Hotel
        <<DELETE>> +deleteHotel(): void
    }

    class "<<Resource>>\nBookings" as ResourceBookings{
        <<GET>> +getBookings(): Booking
        <<POST>> +createBooking(): Booking
        <<PUT>> +updateBooking(): Booking
        <<DELETE>> +deleteBooking(): void
    }

    class "<<Resource>>\nAuth" as ResourceAuth{
        <<POST>> +register(userData): JSON
        <<POST>> +login(credentials): JSON
        <<POST>> +logout(): void
    }

    class "<<Controller>>\nHotelController" as HotelController {
        +getHotels(): JSON
        +createHotel(data): JSON
        +updateHotel(id, data): JSON
        +deleteHotel(id): void
    }

    class "<<Controller>>\nBookingController" as BookingController {
        +getBookings(): JSON
        +createBooking(data): JSON
        +updateBooking(id, data): JSON
        +deleteBooking(id): void
    }

    class "<<Controller>>\nAuthController" as AuthController {
        +register(userData): JSON
        +login(credentials): JSON
        +logout(): void
    }

    class "<<Model>>\nHotel" as HotelModel {
        -name: String
        -location: String
        -rooms: Number
        -price: Number
    }

    class "<<Model>>\nBooking" as BookingModel {
        -user: ObjectId
        -hotel: ObjectId
        -date: Date
        -status: String
    }

    class "<<Model>>\nUser" as UserModel {
        -username: String
        -email: String
        -password: String
        -role: String
    }

    class "<<Database>>\nMongoDB" as Database{}
}

Client ..> HotelService:"Sends Request <<Path>>"
HotelService ..> SecurityMiddleware:"Passes through <<use>>"
SecurityMiddleware ..> ResourceHotels:"Sanitizes & Secures <<use>>"
SecurityMiddleware ..> ResourceBookings:"Sanitizes & Secures <<use>>"
SecurityMiddleware ..> ResourceAuth:"Sanitizes & Secures <<use>>"

ResourceHotels ..> ValidationMiddleware:"Validates input <<use>>"
ResourceBookings ..> AuthMiddleware:"Checks Auth & Role <<use>>"
ResourceBookings ..> ValidationMiddleware:"Validates input <<use>>"

ResourceHotels ..> HotelController:"Calls Controller <<use>>"
HotelController ..> HotelModel:"Uses Model <<use>>"
HotelModel ..> Database:"Stores Data <<use>>"

ResourceBookings ..> BookingController:"Calls Controller <<use>>"
BookingController ..> BookingModel:"Uses Model <<use>>"
BookingModel ..> Database:"Stores Data <<use>>"

ResourceAuth ..> AuthController:"Calls Controller <<use>>"
AuthController ..> UserModel:"Uses Model <<use>>"
UserModel ..> Database:"Stores Data <<use>>"

@enduml